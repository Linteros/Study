# Методы и атрибуты, обладающие сильной приватностью, имеют двойное подчеркивание в начале своих имен.
# Это приводит к их искажению, что означает, что к ним нельзя получить доступ извне класса.

# Цель этого не в том, чтобы гарантировать их приватность, а в избежании ошибок, если у
# подклассов есть методы или атрибуты с теми же именами.

# Методы с искаженными именами все еще могут быть доступны извне, но под другим именем.
# Метод __privatemethod класса Spam может быть доступен извне под именем _Spam__privatemethod.


class Spam:
    __egg = 7

    def print_egg(self):
        print(self.__egg)


s = Spam()
s.print_egg()
print(s._Spam__egg)
print(s.__egg)

# В основном, Python защищает эти элементы, внутренне изменяя имя так, чтобы оно включало имя класса.