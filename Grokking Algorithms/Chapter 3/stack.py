# Каждый раз, когда вы вызываете функцию, компьютер сохраняет в памяти
# значения всех переменных для этого вызова. Далее выводится приветствие
# Hello, Vlad! , после чего следует второй вызов greet2 ("Vlad").
# И снова компьютер выделяет блок памяти для вызова функции

# Ваш компьютер объединяет эти блоки в стек. Второй блок создается над
# первым. Вы выводите сообщение How are you, Vlad ?,
# после чего возвращаете управление из вызова функции.
# Когда это происходит, блок на вершине стека извлекается из него

# Теперь верхний блок в стеке относится к функции greet; это означает, что
# вы вернулись к функции greet. При вызове функции greet2 функция greet
# еще не была завершена. Здесь-то и скрывается истинный смысл этого раздела:
# когда вы вызываете функцию из другой функции, вызывающая функция
# приостанавливается в частично завершенном состоянии.
# Все значения переменных этой функции остаются в памяти.
# А когда выполнение функции greet 2 будет завершено, вы вернетесь к функции greet и продолжите ее
# выполнение с того места, где оно прервалось. Сначала выводится соблюдение
# getting ready to say Ьуе ... , после чего вызывается функция Ьуе.


def greet(name):
    print("Hello, " + name + "!")
    greet2(name)
    print("Getting ready to say bye...")
    bye()


def greet2(name):
    print("How are you, " + name + "?")


def bye():
    print("Ok, bye!")


greet("Vlad")